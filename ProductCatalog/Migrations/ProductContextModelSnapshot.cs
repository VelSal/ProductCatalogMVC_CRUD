// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Data;

#nullable disable

namespace ProductCatalog.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductCatalog.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Food"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Book"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Hardware"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Software"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Name = "Banana",
                            Price = 2.35m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Name = "Monster",
                            Price = 15.9m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Name = "Laptop",
                            Price = 459.99m
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            Name = "Microsoft Office",
                            Price = 59.99m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 1,
                            Name = "Chips",
                            Price = 1.25m
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Name = "Keyboard",
                            Price = 125.45m
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            Name = "Les Fleurs du Mal",
                            Price = 6.95m
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            Name = "Excel",
                            Price = 59.99m
                        });
                });

            modelBuilder.Entity("ProductCatalog.Models.ViewModels.ProductCategoryViewModel", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("ProductCategoryViewModels");
                });

            modelBuilder.Entity("ProductCatalog.Models.Product", b =>
                {
                    b.HasOne("ProductCatalog.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductCatalog.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
